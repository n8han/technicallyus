<!DOCTYPE HTML>
<html>
<head>
<link rel="stylesheet" href="/blueprint/screen.css" type="text/css" media="screen, projection">
<link rel="stylesheet" href="/blueprint/print.css" type="text/css" media="print">  

<!--[if IE]><link rel="stylesheet" href="/blueprint/lib/ie.css" type="text/css" media="screen, projection"><![endif]-->

<link rel="stylesheet" type="text/css" href="../../../resources/com.typeturner.pages.Home/typeturner_en_US.css"/>
<link rel="stylesheet" type="text/css" href="../../../resources/org.apache.wicket.Application/code-stylesheet"/>

<script language="JavaScript" src="../../../resources/com.typeturner.pages.WeblogPage/WeblogPage_en_US.js"></script>

<meta name="generator" content="Typeturner" />

<title>Coderspiel / Tales from the desktop Java crypt</title>
<script type="text/javascript" src="../../../resources/org.apache.wicket.markup.html.WicketEventReference/wicket-event.js"></script>
<script type="text/javascript" src="../../../resources/org.apache.wicket.ajax.WicketAjaxReference/wicket-ajax.js"></script>
</head>

<body onload="initTypeturner();">



<div class="container">

<div>
<div class="prepend-3 span-11 last lead">
	<span id="weblog-name">
		<a href="../../../code">
			
			<img alt="Coderspiel" src="../../../resources/org.apache.wicket.Application/code-nameImage.png"/>
		</a>
	</span>
	<a class="home-link" href="../../../code">
		<span id="weblog-photo"><img alt="" src="../../../resources/org.apache.wicket.Application/code-photo"/></span>
	</a>
</div>
</div>

<div class="prepend-3 span-8 append-3 last">
	
	<div id="id2500" class="post">
		<h2 class="title"><span class="image-wrapper"><img height="47" alt="Tales from the desktop Java crypt" width="548" class="title" src="../../../resources/net.databinder.components.RenderedLabel/f1187b81"/><span class="title">Tales from the desktop Java crypt</span></span></h2>
		<div class="byline"><span>
			<span>By <span class="alias">n8han</span>, <span>on January 24, 2007</span></span>
			<span id="id2501" class="tags">
					{&nbsp;<span><a href="../../../code/tag/apple/#selected-tag"><span>apple</span></a><span id="id2502">, </span></span><span><a href="../../../code/tag/interfaces/#selected-tag"><span>interfaces</span></a><span id="id2503">, </span></span><span><a href="../../../code/tag/java/#selected-tag"><span>java</span></a></span>&nbsp;}
			</span>
		</span></div>
		<div><p>Some fascinating (and tragic) stories are emerging thanks to Steve-o’s dissing of “Java” (by which he really meant Java desktop interfaces, we hope).</p>


	<p class="break">First, <a href="http://www.noodlesoft.com/blog/2007/01/23/the-sun-also-sets/">about Lighthouse Foundation Classes</a>:</p>


	<blockquote>
		<p>We developed an Openstep-like framework in Java to make porting [of our software suite] easier and for the most part we were successful. The Lighthouse Foundation Classes (LFC) were not an exact implementation but they were close enough to make porting more of a mechanical process. […]</p>
	</blockquote>


	<blockquote>
		<p>It quickly became evident that the people involved from the JavaSoft side had little to no experience with OO and/or <span class="caps">GUI</span> programming. I realized that if these were the people in charge of implementing the <span class="caps">GUI</span> toolkit for a platform, then the project is going to be a mess. Various design discussions ensued with the people who didn’t have any real experience with OO programming or developing and shipping real desktop apps overriding those who did.</p>
	</blockquote>


	<p>Wow. That also helps explain “Model 2,” Sun’s horrendously destructive misinterpretation of <acronym title="">MVC</acronym> in the context of a single request cycle. Compared to that thought virus and the subsequent “enterprise” mania, Swing is a resounding success. But only compared to them. With <a href="/n8/articles/2006/12/04/graphical-interfaces-are-best-described-by-resources">resource based interfaces</a> in the wild since the late 1980s, there’s really no excuse for Swing’s naive “put my progress bar in this window, somewhere” method of interface construction.</p>


	<p class="break">And next, <a href="http://talblog.info/archives/2007/01/sundown.html">Internet Foundation Classes</a>:</p>


	<blockquote>
		<p>Constructor, to this day, is still the most IB-like 100% Java-based interface builder I’ve ever seen. For 1996, it was f’ing amazing. (I wish I had a screenshot; I don’t.) It was IB, in Java. <span class="caps">WYSIWYG</span> drag-and-drop layout. Palettes. Dragging connections between objects. […]</p>
	</blockquote>


	<blockquote>
		<p>Imagine this: <span class="caps">IFC</span> looked a helluvalot like AppKit, in Java. No <span class="caps">AWT</span>. And it came with a friggin’ Interface Builder!</p>
	</blockquote>


	<p><acronym title="">IFC</acronym>. Boy, does that name take me back. I did a project with it in the summer after my freshman year. I do <em>not</em> remember Constructor. I don’t really remember anything about <acronym title="">IFC</acronym>, except that in hindsight my application was way cooler than it should have been considering my experience. My junior year I made something in Swing that was really lame. Go figure.</p></div>
	</div>
</div>

<div class="span-3 sidebar" id="postSidebar">
  <div><h3 id='about_coderspiel'>About <em>Coderspiel</em></h3>

<p>This weblog is dedicated to programming with creative license, by <a href='http://twitter.com/n8han'>@n8han</a> / <a href='mailto:nathan@technically.us'>nathan@technically.us</a>.</p>

<h3 id='news_feeds'>News Feeds</h3>

<p><a href='http://technically.us/resources/com.typeturner.Typeturner/code-rss' title='All content in one feed'>Everything</a><br /><a href='http://technically.us/resources/com.typeturner.Typeturner/code-short-rss' title='Left column, frequent links and notes'>Short</a><br /><a href='http://technically.us/resources/com.typeturner.Typeturner/code-long-rss' title='Main column, infrequent lengthy posts'>Long</a></p>

<h3 id='codershelf'>Codershelf</h3>

<p><a href='http://waffle.wootest.net/'>Waffle</a></p></div>
</div>

<div class="span-8 append-3 last">
  <div id="comments">
    <div id="id2504">
  		<div><h3 id='codercomments'>Codercomments</h3></div>
  		<div>
  			<div id="item-1223"><p>On resource based interfaces:</p>

<p>why can&#8217;t you treat the builder&#8217;s generated code as a resource? Why XML (or something else) is better than Java to describe a GUI? You don&#8217;t need to look at Matisse or JFormDesigner&#8217;s code&#8230;</p></div>
  			<div class="date byline">
  				
  				<span><span class="alias">Gustavo</span></span>
  				<span>on January 24, 2007</span>
  			</div>
  		</div><div>
  			<div id="item-1224"><p>Inevitably, you do have to look at all code as code. I&#8217;ve seen at least one very talented programmer give up on fixing Matisse-generated code for a certain DVD() player interface and rewrite it by hand.</p>

<p>You just don&#8217;t have that problem in platforms with good resource runtimes and interface builders like Cocoa/AppKit. They don&#8217;t have &#8220;debates&#8221;:http://www.javalobby.org/java/forums/t85241.html between people over generated vs. hand-coded vs. XML() because everyone is very pleased with the native resource format. They&#8217;ve moved on.</p></div>
  			<div class="date byline">
  				
  				<span><span class="alias">n8han</span></span>
  				<span>on January 24, 2007</span>
  			</div>
  		</div><div>
  			<div id="item-1225"><blockquote>
<p>one very talented programmer give up on fixing Matisse-generated code for a certain DVD player interface and rewrite it by hand.</p>
</blockquote>

<p>Maybe being good at code was the problem&#8230;? I build NB Rich Client Platform apps with very rich UIs almost everyday now, and <em>never</em> look at Matisse blocks. Never even unfold those blocks. A designer (i.e. she doesn&#8217;t code) is building GUIs with us, too.</p>

<p>Maybe you should try Matisse/GroupLayout yourself (if you haven&#8217;t) and I should try Maven&#8230; ;-)</p></div>
  			<div class="date byline">
  				
  				<span><span class="alias">Gustavo</span></span>
  				<span>on January 24, 2007</span>
  			</div>
  		</div><div>
  			<div id="item-1226"><p>That&#8217;s fair I guess. :) I&#8217;ve never used NetBeans&#8217; GUI builder and I have more experience in Cocoa than in Swing. I would still maintain that the variety, reputation, and quality of Cocoa desktop applications have proven resource-based GUIs in a way that code-generated applications have not. Not yet anyway.</p></div>
  			<div class="date byline">
  				
  				<span><span class="alias">n8han</span></span>
  				<span>on January 24, 2007</span>
  			</div>
  		</div><div>
  			<div id="item-5185"><p>Well, I have to write a complicated desktop app in Java so it runs on Windows, Mac OS/X and Linux, so I&#8217;ve been using NetBeans and Matisse. I targeted Java 1.5, used Absolute Layout instead of Group Layout, put all my visual elements in frames to keep them together (and not worry about window resizing, I know, it&#8217;s a cheat but it worked)&#8230;</p>

<p>And Bob was my uncle! More or less&#8230; At least, the app works and is pretty stable.</p></div>
  			<div class="date byline">
  				
  				<span><span class="alias">Phil</span></span>
  				<span>on February 26, 2008</span>
  			</div>
  		</div><div>
  			<div id="item-5186"><p>Oh, heh heh, I forgot: my POINT is, if you have to target multiple platforms, you&#8217;re not going to be doing it in Cocoa!</p>

<p>Besides, people complain all the time about generated code, but if you don&#8217;t fiddle with it, and concentrate on your application code, it usually works pretty well.</p>

<p>I mean, really &#8211; who cares how ugly it is? You can split hairs and complain that the code is &#8220;ugly&#8221; or you can assume it&#8217;s just compiler output (like object code) and focus on what you&#8217;re actually working on.</p>

<p>Isn&#8217;t it faster to just let Matisse do its stuff and focus on the work?</p></div>
  			<div class="date byline">
  				
  				<span><span class="alias">Phil</span></span>
  				<span>on February 26, 2008</span>
  			</div>
  		</div><div>
  			<div id="item-5187"><p>I&#8217;m sure Matisse will always be improving, but it&#8217;s <a href='http://technically.us/code/x/graphical-interfaces-are-best-described-by-resources/'>my belief</a> that using data to describe layout is a superior approach to generating or writing layout code. A GUI toolkit being cross-platform is a separate question. Cocoa used to be, when it was NeXT&#8217;s Yellow Box. IFC was cross platform, and Swing could (should!) have been a cross platform resource based interface toolkit. At least one is alive and well: <a href='http://glade.gnome.org/'>Glade</a> is cross platform and even cross language.</p>

<p>But I can see how Matisse is the best option for a lot of purposes, and I&#8217;m glad you&#8217;re happy with it.</p></div>
  			<div class="date byline">
  				
  				<span><span class="alias">n8</span></span>
  				<span>on February 26, 2008</span>
  			</div>
  		</div>
  	</div>
  	<div id="id2505">
  	  <h3 id="add-comment">Add a comment</h3>
  		<form id="id2506" action="../../../" class="labelAbove" method="get"><div style="display:none"><input type="hidden" name="id2506_hf_0" id="id2506_hf_0" /><input type="hidden" name="wicket:interface" value=":1356:formWrapper:addComment::IFormSubmitListener::" /></div>
  		  <div id="id2507" class="feedback">
  
</div>
  			<div class="row">
  				<label>Name</label>
  				<input name="commenterName" value="" type="text"/>
  			</div>
  			<div class="row">
  				<label>E-mail <span class="note">(will not appear with comment)</span></label>
  				<input name="commenterEmail" value="" type="text"/>
  			</div>
  			<div class="row">
  				<label>Web site <span class="note">(optional)</span></label>
  				<input name="commenterSite" value="http://" class="web" type="text"/>
  			</div>
  			<div>
  				<label>Comment</label>
  				<textarea name="body"></textarea>
  			</div>
  			<p><input id="id2508" name="add" value="Add a comment" onclick="wicketShow('id2508--ajax-indicator');var wcall=wicketSubmitFormById('id2506', '../../../?wicket:interface=:1356:formWrapper:addComment:add::IActivePageBehaviorListener:0:3&amp;wicket:ignoreIfNotActive=true', 'add' ,function(){;wicketHide('id2508--ajax-indicator');}.bind(this),function() { ;wicketHide('id2508--ajax-indicator');}.bind(this), function() {return Wicket.$$(this)&amp;&amp;Wicket.$$('id2506')}.bind(this));;; return false;" type="submit"/><span style="display:none;" class="wicket-ajax-indicator" id="id2508--ajax-indicator"><img src="../../../resources/org.apache.wicket.ajax.AbstractDefaultAjaxBehavior/indicator.gif" alt=""/></span></p>		
  		</form>
  	</div>
  </div>
</div>
	
</div> <!-- container -->



</body>
</html>
